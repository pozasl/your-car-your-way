query GetAllAccounts {
  accounts {
    address {
      city
    }
    firstName
    lastName
    id
    birthDate
    createdAt
    updatedAt
  }
}

query GetAccountById($id: ID!) {
  account(id: $id) {
    address {
      street
      complement
      city
      postalCode
      region
      countryCode
    }
    firstName
    lastName
    birthDate
  }
}

query GetToken($credentials: AccountCredentials!) {
  token(credentials: $credentials)
}

query GetMe {
  me {
    id
    role
    firstName
    lastName
  }
}

query GetLiveMessages($customerId: ID!, $customerServiceId: ID!) {
  liveMessages(customerId: $customerId, customerServiceId: $customerServiceId) {
    from {
      id
      title
      firstName
      lastName
      role
    }
    to {
      id
      title
      firstName
      lastName
      role
    }
    at
    content
  }
}

query GetUserOnline($role: Role!) {
  usersOnline(role: $role) {
    id
    name
    role
  }
}


mutation RegisterCustomer( $email: String!, $password: String!, $title: Title!,  $lastName: String!, $firstName: String!, $birthDate: Date!, $address: NewAddressInput!) {
  registerCustomer(
    account: {title: $title, firstName: $firstName, lastName: $lastName, email: $email, password: $password, birthDate: $birthDate, address: $address}
  ) {
    message
  }
}

mutation SendMessage($from: ID!, $to: ID!, $content: String!) {
  sendLiveMessage(message: {fromUserId: $from, content: $content, toUserId: $to}) {
    at
    content
    from {
      firstName
    }
    to {
      firstName
    }
  }
}

mutation SetUserOnline($user: UserOnlineInput!, $online: Boolean!) {
  setUserOnline(user: $user, online: $online) {
    message
  }
}



subscription MessageSub($to: ID!) {
  newLiveMessage(toUserId: $to) {
    at
    content
    from {
      firstName
    }
    to {
      firstName
    }
  }
}

subscription OnlineCustomerSub {
    customersOnline {
      id
      name
      role
    }
}

subscription OnlineCustomerServiceSub {
    customerServiceOnline {
      id
      name
      role
    }
}